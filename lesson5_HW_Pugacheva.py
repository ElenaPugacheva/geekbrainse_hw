'''

1. Создать программно файл в текстовом формате, записать в него построчно данные, вводимые пользователем.
Об окончании ввода данных свидетельствует пустая строка.
'''

with open("personal_date.txt", 'w') as p_date:
    n = input("Write something: ")
    print(n, file=p_date)
    while True:
        if n == '':
            break
        else:
            n = input("Write something: ")
            print(n, file=p_date)

'''
2. Создать текстовый файл (не программно), сохранить в нем несколько строк,
выполнить подсчет количества строк, количества слов в каждой строке.
'''

with open("personal_date.txt") as p_date:
    sum_str = 0
    for line in p_date:
        sum_str += 1
    print("Колличество строк =", sum_str - 1)
with open("personal_date.txt") as p_date:
    namber = 1
    for i in p_date:
        for j in line:
            count_str = i.split()
            if len(count_str) != 0:
                if len(count_str) % 10 == 1:
                    x = "слово"
                elif 10 < len(count_str) <= 20:
                    x = "слов"
                else:
                    x = "слова"
                print(f'В {namber} строке: {len(count_str)} {x}')
                namber +=1

'''
3. Создать текстовый файл (не программно), построчно записать фамилии сотрудников и величину их окладов (не менее 10 строк).
Определить, кто из сотрудников имеет оклад менее 20 тыс., вывести фамилии этих сотрудников.
Выполнить подсчет средней величины дохода сотрудников.
Пример файла:
Иванов 23543.12
Петров 13749.32
'''

with open("salary_date.txt") as salary:
    mass = salary.read().split('\n')
    lastname = []
    count_person = 0
    value_salary = 0
    for i in mass:
        i = i.split(' ')
        count_person += 1
        value_salary += float(i[1])
        if float(i[1]) < 20000:
            lastname.append(i[0])
    print(f'Сотрудники с зарплатой менее 20 т.: {lastname}')
    print(f"Средняя зарплата:", value_salary/count_person)

'''
4. Создать (не программно) текстовый файл со следующим содержимым:
One — 1
Two — 2
Three — 3
Four — 4

Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные.
При этом английские числительные должны заменяться на русские. Новый блок строк должен записываться в новый текстовый файл.
'''

translete = {"One": "Один", "Two": "Два", "Three": "Три", "Four": "Четыре"}
new_numbers = []
with open("numbers.txt") as text_numbers:
    for i in text_numbers:
        a = i.split(" ")
        new_numbers.append(translete[a[0]] +" " + a[1]+" " +a[2])
    print(new_numbers)

with open("new_numbers.txt", "w") as new_file:
    for n in new_numbers:
        print(n, file=new_file, end="")

'''
5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами.
 Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.
'''
with open("sum_numbers.txt", "w") as sum_numbers:
    n = input("Напишите цифры через пробел: ")
    print(n, file=sum_numbers)

with open("sum_numbers.txt") as sum_numbers:
    sum_n = 0
    for i in sum_numbers:
        i = i.split(" ")
        for j in i:
            sum_n += int(j)
    print(sum_n)
'''
6. Необходимо создать (не программно) текстовый файл, где каждая строка описывает учебный предмет и наличие лекционных,
практических и лабораторных занятий по этому предмету и их количество.
Важно, чтобы для каждого предмета не обязательно были все типы занятий. Сформировать словарь,
содержащий название предмета и общее количество занятий по нему. Вывести словарь на экран.
Примеры строк файла:
Информатика: 100(л) 50(пр) 20(лаб).
Физика: 30(л) — 10(лаб)
Физкультура: — 30(пр) —
Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}

'''






'''
7. Создать вручную и заполнить несколькими строками текстовый файл,
в котором каждая строка должна содержать данные о фирме: название, форма собственности, выручка, издержки.
Пример строки файла: firm_1 ООО 10000 5000.

Необходимо построчно прочитать файл, вычислить прибыль каждой компании,
а также среднюю прибыль. Если фирма получила убытки, в расчет средней прибыли ее не включать.
Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями,
а также словарь со средней прибылью. Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].

Итоговый список сохранить в виде json-объекта в соответствующий файл.
Пример json-объекта:

[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]

Подсказка: использовать менеджер контекста.'''


